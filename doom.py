#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Doom prototype.

from trabant import *
import trabant
from time import time

# E1M1 Doom 1 map in buggy short format.
floor_lookup = [0,32,1,16,128,64,24,-40,8,-16,-24,-3232,-8,-36,-64,-12,152,28,3008,-68,192,-3840,2112,256,-152,-72,96,-32,257.992,-3712,-2432,0.382683,
928,31.7529,-4,48,0.661803,7.10543e-15,-192,-3216,68,0.355381,144,136,0.92388,-3856,272,0.433189,1888,0.070889,-2496,0.0898056,288,0.957092,0.995959,0.289784,
715.542,-48,304,-96,0.666921,0.901303,-0.999654,-3664,-2720,385.331,0.946236,0.934722,452.548,0.987087,226.274,896.246,0.0824805,-0.559853,0.990838,0.160182,
0.749678,112,-0.135059,0.170672,291.204,0.995575,0.985328,125.935,-0.745128,768.042,115.378,-3360,17.7504,576,2784,248,0.703414,0.655202,-56,-0.964441,
0.2643,502.155,0.788205,152.21,0.828592,181.019,-3576,0.255259,90.5097,0.335511,-0.997484,1360,0.277949,204.9,320,340.353,-3236,0.836905,0.942036,224,0.999513,
-0.749678,-3776,3424,0.501927,-112,-3128,171.02,0.969286,-3104,124.952,170.077,-80,120.294,162.334,1280,0.819067,0.906419,1056,0.444755,-128,0.0262885,
0.71078,-3230.03,0.625727,-3239.38,-4844,-0.92388,547.81,640,-3012,75.3394,3264,926.811,2336,1008.44,-4336,-0.323478,-20,228.224,-0.895505,-0.492699,-4384,
469.835,600,0.973249,-3195.8,343.935,0.633104,-0.755454,-2921.97,912,2856,2774.24,0.755454,1680,0.362523,23.9503,2652,2513.11,163.542,464.892,0.768618,
132.877,289.38,172.062,40,-3803.45,261.439,665.129,855.316,0.790266,165.123,246.25,-0.687215,0.331007,2792.21,447.929,-4272,-0.844333,341.49,0.103562,2375.92,
2192,448,-3263.33,237.855,298.373,3259.59,194.648,-4008,145.22,-0.160182,183.034,-4640,227.542,-92.0649,968,0.965771,3383.09,184,0.777897,-328,-0.995133,
3017.6,-4187.37,-3487.27,3405.85,0.997484,54.3058,2114.11,32.9617,841.477,781.95,0.256668,-4675.2,2768,432,14.6585,-4160,0.792989,-0.0312043,3664.94,59.2775,
202.659,-3238.24,0.943628,0.413216,898.283,1504,3552,1176,429.79,-2940.04,832,243.311,88,202.386,-3157.46,-3456,2935.26,139.701,662.044,-3261.92,2160,60.7157,
1972,0.980213,1612.8,-0.991367,-2992.78,366.941,-3265.75,-3912,2864,1654.44,-4000,-4096,0.573697,401.527,-3490.77,-4352,760.914,0.615412,135.749,2501.12,
1086,-0.319247,0.966873,2342.15,0.366705,-3308.25,326.337,137.232,175.285,-0.484769,2964.66,0.0356462,330.429,-0.738423,-3824,-3567.85,235.313,-3088,227.278,
186.59,-3584.8,3600.54,-3200.01,1431.9,-3263.8,196.126,-3666.24,169.668,0.612764,-2272,817.336,-3405.63,254.023,0.947671,-331.475,-4368,1544,590.051,-3192.1,
3537.1,1752.6,85.865,103.395,191.337,20,3064.53,0.245935,15.4742,-3144.62,100.176,217.113,246.516,-2268.16,496.774,-0.960596,-3245.55,-0.993332,-3311.68,
2029.32,2600.55,-3353.4,2906.89,2128.32,295.011,-3744.13,0.628392,117.651,4.07842,-751.435,0.826333,0.86491,0.0312043,99.9512,603.775,2080,2834,0.259397,
-0.979578,322.883,-488,-0.615412,201.432,0.202661,31.8043,0.9665,0.115288,1062.74,662.408,3231.05,1011.7,281.04,502.41,0.312205,2832,1302.33,-3571.33,-2880.56,
129.163,3359.46,182.147,-0.0939719,0.960596,-3578.56,138.833,109.171,-0.895652,230.755,-2109.56,117.732,-4132.24,-4470.11,2164,-0.465549,44.978,793.292,
0.547349,123.371,2928,-267.648,237.857,-3438.19,0.131119,2559.36,-643.012,2896,2508,0.874642,-0.609236,250.44,-4620,2272,-3399.16,0.996593,-3944,267.077,
77.2938,155.077,4.52548,-2810.3,125.268,-3402.86,0.422379,3104,0.50896,-3209.85,-361.216,3073.86,2922.4,550.426,384,-4217.16,-2818.05,0.994623,86.1626,
1019.5,899.507,-3888,177.608,0.393398,286.239,0.86079,-4024,1383.17,761.01,-0.86491,3160,29.0476,3048,3600,359.555,-3152,0.780042,581.067,0.817416,-2622.03,
-3294.75,0.950015,2256,27.4398,-3320.62,1210.21,728.976,-2992,0.674338,302.494,0.525731,125.739,3204.72,365.677,608,108.056,-3108,-2368,-3233.97,-0.919368,
-3103.34,3.53381,51.9672,214.332,0.0985376,131.519,-3090,434.439,0.445052,-3276,31.4348,0.8702,-2946.9,496,280,591.662,-2710.39,-3039.56,-2691.06,0.201066,
-0.999364,189.952,-28,2224,0.774067,-3836.24,504,116.417,-4796.8,-0.573697,141.236,-247.936,-3491.77,228.657,407.294,-2592,-3792,-3160.5,123,-2624,3527.92,
-2784,0.726454,-3336,0.308537,1243.76,-3219.33,146.127,0.931975,1798.08,186.762,465.996,80,0.840941,2992,0.189108,0.991523,2735.06,261.197,158.058,2686.44,
269.9,-3100.35,0.850651,1826.56,-0.995959,-0.780042,0.197945,-0.951213,-3676.97,-3304.59,-4576,2160.79,62.0891,2.84217e-14,-299.264,951.428,711.014,3244,
-2534.07,57.7179,262.478,225.119,3564.75,-3309.98,15.8764,2492,0.979249,0.0939719,-3090.27,2961.06,0.981514,384.749,2388,242.863,1608,2915.06,-3212.22,
-0.639708,168,26.3038,-3263.12,554.63,752.701,-4660,208,2926.55,2488,715.003,3380.02,136.015,-0.966873,175.362,-0.910633,241.086,102.527,289.109,250.823,
128.798,2782.06,809.621,0.323478,-0.957092,-3376,128.993,1632,230.177,139.714,356.382,-3184,-2750.77,4,-3844.43,53.2512,2156.8,260.461,-253.245,-0.229753,
-4064,109.669,-3289.36,95.4084,1696,59.9707,-2948.06,-3509.31,172.325,1215.75,313.637,-224,0.129933,286.769,0.745128,913.778,395.252,-3128.48,374.55,3030.49,
55.0958,576.888,2939.72,19.5895,106.253,2146.16,-3321.11,-3634.69,1128.5,-2276.48,-3371.89,0.576048,0.895652,2000,528.787,3148.31,2998.4,367.49,76.9572,
-0.289784,-0.934722,203.647,2886.4,0.396633,-3004.16,372.58,93.2096,2913.74,328.293,-3383.9,-3464.94,-0.245935,12,288.998,1032.2,62.7572,55.6599,0.981956,
-0.996593,176,-3085.66,116,-2988.2,-0.987087,415.165,-3536,240,1679.12,593.97,-105.195,37.9979,518.587,3518.28,3016,-3320,-3312,0.930337,122.261,-0.0898056,
3024,-3295.56,243.705,-3036.42,0.535819,-0.547349,1.42109e-14,0.917977,-2066.1,3528.44,-2094.48,284.058,2744,399.805,945.002,-3094.78,-3872,323.817,335.836,
368.813,-3472.06,-3731.76,-3205.46,0.563182,2800,353.452,-3728,-0.191391,180.333,0.885022,126.784,56,279.428,268.504,-3508.86,416,-4256,-2983.74,-0.422379,
63.3568,2888.33,-3982.4,2071.46,]
floor_boxes = [572,50,9,77,4,1,340,702,3,371,360,1,444,556,9,696,348,1,245,50,9,5,4,1,318,50,9,3,4,1,602,64,3,5,20,1,356,30,34,250,145,8,260,30,608,1,23,
8,48,311,9,20,5,1,48,512,9,20,5,1,541,259,59,683,605,1,107,690,10,1,26,5,107,452,10,1,26,5,22,269,24,4,3,1,22,438,136,4,1,3,22,45,121,4,1,3,22,296,59,4,
1,3,322,346,94,528,227,551,22,513,128,4,1,3,500,29,25,1,4,1,22,720,14,4,26,3,163,645,10,97,594,1,681,11,3,1,5,35,582,11,6,1,5,5,674,11,1,1,5,529,552,433,
9,56,83,1,38,11,252,23,20,1,316,523,9,401,147,1,38,122,40,4,3,43,626,11,676,5,5,6,218,11,40,3,4,43,38,520,40,4,3,43,1,11,35,20,110,77,42,11,182,1,5,26,
71,139,15,28,33,8,437,201,12,85,601,3,131,11,27,4,110,1,134,63,9,5,1,1,579,457,10,535,472,1,58,11,0,1,5,3,46,11,8,1,5,1,52,87,3,5,5,35,52,125,3,5,5,35,
706,112,499,3,91,725,584,29,25,490,4,1,174,45,24,524,234,1,537,609,136,604,557,3,534,502,121,257,550,3,199,30,667,1,23,8,459,30,326,26,23,8,90,64,154,538,
480,8,341,456,15,28,363,8,192,728,14,612,188,1,583,118,13,510,129,6,204,222,14,80,309,1,119,118,14,20,431,1,223,276,6,290,618,42,428,509,13,251,724,6,357,
483,57,70,589,37,517,664,17,396,379,16,232,21,59,1,4,3,718,21,128,1,4,3,375,21,14,1,4,3,270,21,57,1,4,3,406,21,27,1,4,3,399,21,7,1,4,1,148,45,14,4,115,
1,246,710,17,5,5,16,596,621,7,527,661,1,292,221,7,451,130,1,18,273,7,20,4,1,18,317,7,20,1,1,18,206,7,4,3,1,18,443,7,4,3,1,412,272,24,101,104,1,18,548,7,
4,5,1,18,411,7,5,6,1,18,210,7,5,3,1,220,505,7,571,381,1,18,142,7,1,8,1,18,581,7,5,6,1,305,578,19,580,307,6,682,489,19,177,705,6,619,464,19,200,115,6,393,
473,19,686,280,6,175,561,19,597,492,6,549,622,19,275,184,6,526,384,19,186,558,6,271,297,19,335,203,6,404,644,3,68,733,1,376,493,9,719,507,1,48,518,3,89,
5,1,264,474,34,712,707,8,198,495,34,631,587,8,611,735,24,410,595,1,171,29,25,471,4,1,344,308,94,70,419,700,640,546,25,205,577,1,713,716,10,726,653,1,421,
547,10,109,620,1,405,337,9,319,126,1,350,254,9,585,126,1,508,539,9,56,193,1,613,320,9,663,386,1,134,299,15,23,1,8,32,39,15,441,365,8,630,39,15,180,478,
8,368,342,12,636,202,3,462,166,12,484,603,3,463,266,12,109,354,3,312,574,12,554,176,3,151,514,27,65,325,1,185,304,10,345,209,1,503,11,10,3,42,1,563,415,
24,267,385,1,407,516,15,6,4,8,327,183,13,633,129,6,380,339,57,593,536,37,370,377,14,298,324,1,119,102,14,623,435,1,662,677,13,111,671,6,650,422,13,80,616,
6,424,102,13,466,482,6,90,112,14,5,91,1,450,21,17,331,323,16,560,162,17,660,468,16,215,709,17,99,390,16,586,697,17,99,530,16,734,420,7,333,189,1,657,249,
10,111,635,37,447,730,7,592,130,1,694,235,7,46,0,1,256,392,7,278,470,1,168,194,7,179,722,1,18,158,7,58,0,1,150,615,24,101,104,1,651,231,7,253,261,1,262,
146,19,160,216,6,570,122,19,258,332,6,281,334,3,68,225,1,285,607,34,288,670,8,22,63,25,23,1,1,491,125,10,233,20,1,628,426,10,86,610,1,416,141,10,86,88,
1,418,461,10,388,88,1,427,642,9,228,83,1,212,402,9,373,207,1,361,11,9,58,89,1,684,477,9,369,417,1,71,139,15,28,33,8,32,600,15,0,1,8,522,665,12,301,460,
3,213,689,12,511,656,3,669,241,12,248,395,3,282,731,12,625,638,3,229,566,12,144,398,3,643,695,27,65,127,1,429,302,13,711,639,6,469,330,14,652,727,1,637,
632,13,569,289,6,634,659,13,430,692,6,449,486,13,679,559,6,573,413,14,294,155,1,303,675,17,355,498,16,238,715,17,196,504,16,687,617,17,649,448,16,567,378,
7,123,487,1,531,277,7,46,0,1,555,152,7,576,729,1,169,391,7,123,173,1,226,389,3,244,239,1,648,29,25,1,4,1,181,641,10,28,562,1,400,714,9,56,211,1,32,11,15,
314,33,8,167,87,15,1,0,8,247,680,12,300,439,3,131,255,12,4,20,3,436,494,12,668,127,3,624,475,27,28,33,1,688,606,13,454,515,6,321,287,17,149,240,16,703,
313,17,445,329,16,343,432,7,159,479,1,736,704,3,553,591,1,372,268,10,97,349,1,32,39,15,0,52,8,708,306,12,85,685,3,]
box_quats = {1:(82,0,0,79),2:(496,0,0,359),10:(224,0,0,49),17:(197,0,0,434),21:(96,0,0,95),25:(54,0,0,51),27:(455,0,0,646),34:(76,0,0,36),35:(138,0,0,92),
38:(423,0,0,133),45:(397,0,0,113),46:(113,0,0,699),47:(98,0,0,362),50:(120,0,0,446),51:(352,0,0,120),52:(172,0,0,525),53:(274,0,0,132),54:(135,0,0,387),
56:(55,0,0,599),57:(440,0,0,476),58:(44,0,0,31),59:(100,0,0,73),68:(701,0,0,658),69:(383,0,0,108),74:(44,0,0,31),78:(75,0,0,678),81:(60,0,0,629),82:(263,0,0,544),
84:(74,0,0,78),85:(723,0,0,394),86:(698,0,0,195),87:(49,0,0,106),88:(627,0,0,533),89:(93,0,0,165),90:(465,0,0,295),92:(47,0,0,61),93:(521,0,0,545),94:(161,0,0,614),
96:(49,0,0,106),97:(72,0,0,673),98:(367,0,0,338),99:(242,0,0,191),100:(140,0,0,543),101:(453,0,0,140),102:(51,0,0,542),103:(691,0,0,286),105:(60,0,0,84),
106:(60,0,0,84),107:(519,0,0,190),108:(66,0,0,153),109:(61,0,0,47),110:(501,0,0,164),111:(67,0,0,41),112:(133,0,0,732),114:(214,0,0,358),116:(132,0,0,506),
117:(310,0,0,187),118:(403,0,0,265),119:(672,0,0,532),120:(103,0,0,588),121:(647,0,0,135),122:(414,0,0,72),124:(467,0,0,540),125:(236,0,0,409),126:(137,0,0,62),
127:(137,0,0,62),128:(717,0,0,351),129:(284,0,0,103),130:(108,0,0,336),132:(328,0,0,124),133:(374,0,0,458),135:(31,0,0,143),136:(69,0,0,75),138:(74,0,0,78),
139:(170,0,0,93),140:(481,0,0,219),143:(53,0,0,654),144:(55,0,0,53),145:(53,0,0,55),146:(51,0,0,54),147:(315,0,0,283),149:(485,0,0,156),150:(76,0,0,36),
152:(488,0,0,157),153:(31,0,0,44),154:(47,0,0,61),155:(598,0,0,66),156:(442,0,0,425),157:(41,0,0,655),158:(69,0,0,208),159:(568,0,0,721),160:(353,0,0,116),
161:(116,0,0,237),162:(105,0,0,114),163:(364,0,0,564),164:(408,0,0,291),165:(279,0,0,98),166:(178,0,0,575),167:(81,0,0,565),170:(81,0,0,382),171:(293,0,0,497),
173:(366,0,0,230),174:(54,0,0,693),175:(36,0,0,117),177:(243,0,0,590),179:(41,0,0,67),180:(36,0,0,117),181:(105,0,0,114),182:(100,0,0,73),183:(347,0,0,217),
184:(124,0,0,666),185:(82,0,0,79),186:(96,0,0,95),188:(138,0,0,92),}

# Helper functions.
rotz = lambda a: quat().rotate_z(a)
is_shoot_tap = lambda: (fasttap() or check_reset_time_tap()) if is_touch_device() else click(left=True)

# Setup
fg(outline=False)
bgcol = vec3(0.4,0.8,1)
bg(col=bgcol)
gravity((0,0,0), friction=0, bounce=0.1)
trabant.wait_until_loaded = False

# Load map.
l = floor_lookup
for i in range(0,len(floor_boxes),6):
    idx = i/6
    p = [l[j] for j in floor_boxes[i:i+6]]
    pos,size = vec3(*p[:3])/64,vec3(*p[3:])/64
    pos += vec3(3.5,50.5,-3)
    c = int(((pos.z+size.z/2)+3)*219)
    c = ((c&0xf)<<8) + (c>>4)
    c = (c+0xeee)/2
    c = '#%3.3x' % c
    q = None
    if idx in box_quats:
        q = quat(*[l[j] for j in box_quats[idx]])
    create_box(pos, orientation=q, side=size, mat='flat', col=c, static=True)

trabant.wait_until_loaded = True

# Create avatars.
def create_avatar(pos, col):
    # Create a man-like capsule. OK, maybe not man-like but a capsule then.
    avatar = create_capsule(pos, col=col)
    avatar.create_engine(walk_abs_engine, strength=25, max_velocity=4)
    avatar.floortime = time()
    avatar.powerup = 1
    return avatar
player = create_avatar((0,0,0), '#00f0')    # Alpha=0 means invisible. We hide in case we use some rendering mode which displays backfacing polygons.
avatars = (player,)
grenades = []
cam(distance=0, fov=60, target=player, target_relative_angle=True)
yaw,pitch = -pi/2,0    # Start looking to the right, towards the center of the map.
gravity((0,0,-15), friction=1, bounce=4)    # Higer gravity than Earth in Doom. Bounce is a state variable. We want bouncing grenades.

while loop():
    # Update mouse look angles.
    yaw,pitch = yaw-mousemove().x*0.09, pitch-mousemove().y*0.05
    pitch = max(min(pitch,pi/2),-pi/2)    # Allowed to look straight up and straight down, but no further.

    # XY movement relative to the current yaw angle, jumps are controlled with Z velocity.
    xyrot = rotz(yaw)
    player.engine[0].force(xyrot * keydir().with_z(0) * player.powerup)
    if keydir().z>0 and time()-player.floortime < 0.1 and timeout(0.3, first_hit=True):
        player.vel(player.vel()+vec3(0,0,6))

    # Look around.
    cam(angle=(pitch,0,yaw))
    [avatar.avel((0,0,0)) for avatar in avatars]    # Angular velocity. Makes sure the avatars doesn't start rotating for some reason.
    [avatar.orientation(quat()) for avatar in avatars]    # Keep avatars straight at all times.

    # Throw grenades.
    if is_shoot_tap() and timeout(1, timer=2, first_hit=True): # Limit shooting frequency.
            orientation = xyrot.rotate_x(pitch)
            vel = player.vel()
            pos = player.pos() + vel*0.05 + orientation*vec3(0,1,0)
            vel = vel + orientation*vec3(0,10,0)
            grenade = create_sphere(pos=pos, vel=vel, radius=0.05, col='#3a3')
            grenade.starttime = time()
            grenades += [grenade]
            sound(sound_bang, pos)

    # Check if grenade exploded or if a player touched ground.
    for obj,obj2,force,pos in collisions():
        if obj in grenades and obj2 in avatars:
            obj.starttime -= 100    # Set timeout to long ago, will explode below.
        # Store time of last floor touch so we know if we're able to jump.
        if force.z > force.length()/2 and obj in avatars:    # Check that force is mostly aimed upwards (i.e. stepping on ground).
            obj.floortime = time()    # Last time we touched the floor.

    # Explode grenades and remove missed grenades.
    for g in list(grenades):
        if time()-g.starttime > 3:
            pos = g.pos()
            explode(pos, vel=(0,0,3), strength=0.5)
            g.release()
            grenades.remove(g)

    pos = player.pos()

    # Respawn if fell down.
    if pos.z < -5:    # Fade to black.
        bg(col=bgcol*-5/pos.z)
        pitch += 0.05    # Look up towards the level you're falling down from.
    if pos.z < -50:
        sound(sound_clank, pos)
        player.vel((0,0,0))
        player.pos((0,0,0))
        player.powerup = 1
        bg(col=bgcol)
        yaw,pitch = -pi/2,0
